homepage:
    path:  /
    defaults: { _controller: AppBundle:Default:index }
    h5: true

crontab_web:
    path:  /anon/crontab
    defaults: { _controller: AppBundle:Common:crontab }
    methods: [POST]

jstranslation_js:
    path:  /anon/translations/{domain}.{_format}
    defaults: { _controller: bazinga.jstranslation.controller:getTranslationsAction, domain: "messages", _format: "js" }
    methods:  [ GET ]
    options:
        i18n: false
        expose: true
    requirements:
        _format: js|json
        domain: "[\\w]+"


homepage_category:
    path: /course/search
    defaults: { _controller: AppBundle:Default:coursesCategory }


login:
    path:  /login
    defaults: { _controller: AppBundle:Login:index }

login_check:
    path:  /login_check

logout:
    path:  /logout

login_ajax:
    path:  /login/ajax
    defaults: { _controller: AppBundle:Login:ajax }

login_bind:
    path:  /login/bind/{type}
    defaults: { _controller: AppBundle:LoginBind:index }

login_bind_callback:
    path:  /login/bind/{type}/callback
    defaults: { _controller: AppBundle:LoginBind:callback }

oauth2_login_index:
    path:  /oauth2/login/main
    defaults: { _controller: AppBundle:OAuth2/Login:main }

oauth2_login_app:
    path:  /oauth2/login/app
    defaults: { _controller: AppBundle:OAuth2/Login:app }

oauth2_login_bind_account:
    path:  /oauth2/login/bind_account
    defaults: { _controller: AppBundle:OAuth2/Login:bindAccount }
    methods: [POST]

oauth2_login_bind_login:
    path:  /oauth2/login/bind_login
    defaults: { _controller: AppBundle:OAuth2/Login:bindLogin }

oauth2_login_create:
    path:  /oauth2/login/create
    defaults: { _controller: AppBundle:OAuth2/Login:create }

oauth2_login_success:
    path:  /oauth2/login/success
    defaults: { _controller: AppBundle:OAuth2/Login:success }

login_check_email:
    path:  /login/check/email
    defaults: { _controller: AppBundle:Login:checkEmail }

password_init:
    path: /password/init
    defaults: { _controller: AppBundle:PasswordInit:initPassword }


user_terms:
    path:  /userterms
    defaults: { _controller: AppBundle:Register:userTerms }

distributor_register:
   path:  /distributor_register
   defaults: { _controller: AppBundle:Distributor:register }

distributor_product:
   path:  /distributor_product
   defaults: { _controller: AppBundle:Distributor:product }

register:
    path:  /register
    defaults: { _controller: AppBundle:Register:index }

register_success:
    path:  /register/success
    defaults: { _controller: AppBundle:Register:success }

register_submited:
    path:  /register/submited/{id}/{hash}
    defaults: { _controller: AppBundle:Register:submited }

register_reset_email:
    path: /register/email/reset/{id}/{hash}
    defaults: { _controller: AppBundle:Register:resetEmail}

register_reset_email_check:
    path: /register/email/reset/check
    defaults: { _controller: AppBundle:Register:resetEmailCheck}

register_reset_email_verify:
    path: /register/email/reset/verify
    defaults: { _controller: AppBundle:Register:resetEmailVerify}
    methods: [POST]

register_email_send:
    path:  /register/email/send/{id}/{hash}
    defaults: { _controller: AppBundle:Register:emailSend }
    methods: [POST]

register_email_verify:
    path:  /register/email/verify/{token}
    defaults: { _controller: AppBundle:Register:emailVerify }

register_email_check:
    path:  /register/email/check
    defaults: { _controller: AppBundle:Register:emailCheck }

register_mobile_check:
    path:  /register/mobile/check
    defaults: { _controller: AppBundle:Register:mobileCheck }

register_email_or_mobile_check:
    path:  /register/email_or_mobile/check
    defaults: { _controller: AppBundle:Register:emailOrMobileCheck }

register_nickname_check:
    path:  /register/nickname/check
    defaults: { _controller: AppBundle:Register:nicknameCheck }



register_captcha_check:
    path:  /register/captcha/check
    defaults: { _controller: AppBundle:Register:captchaCheck }

register_captcha_modal:
    path:  /register/captcha/modal
    defaults: { _controller: AppBundle:Register:captchaModal }

register_analysis:
    path:  /register/analysis
    defaults: { _controller: AppBundle:Register:analysis }

register_captcha_num:
    path:     /captcha_num
    defaults: { _controller: AppBundle:Register:captcha }

file_upload:
    path:  /file/upload
    defaults: { _controller: AppBundle:File:upload }
    methods: [POST]

file_img_crop:
    path:  /file/img/crop
    defaults: { _controller: AppBundle:File:cropImg }
    methods: [POST]

attachment_list:
    path: /attachments/{targetType}/{targetId}
    defaults: { _controller: AppBundle:File/Attachment:list }
    methods: [GET]

attachment_form_fields:
    path: /attachment/{targetType}/{targetId}/formFields
    defaults: { _controller: AppBundle:File/Attachment:formFields , targetId: 0}
    methods: [GET]

uploader_entry:
    path:  /uploader
    defaults: { _controller: AppBundle:Uploader:entry }

uploader_init:
    path:  /uploader/init
    defaults: { _controller: AppBundle:Uploader:init }
    methods: [GET, POST]

uploader_auth:
    path:  /uploader/auth
    defaults: { _controller: AppBundle:Uploader:uploadAuth }
    methods: [GET, POST, OPTIONS]

uploader_batch_upload:
    path:  /uploader/batch_upload
    defaults: { _controller: AppBundle:Uploader:batchUpload }

uploader_finished:
    path:  /uploader/finished
    defaults: { _controller: AppBundle:Uploader:finished }
    methods: [GET, POST]

uploader_upload_callback:
    path:  /uploader/upload_callback
    defaults: { _controller: AppBundle:Uploader:uploadCallback }
    methods: [GET, POST]

uploader_process_callback:
    path:  /uploader/process_callback
    defaults: { _controller: AppBundle:Uploader:processCallback }
    methods: [POST]

uploader_chunks_start:
    path:  /uploader/chunks/start
    defaults: { _controller: AppBundle:Uploader:chunksStart }

uploader_chunks_finish:
    path:  /uploader/chunks/finish
    defaults: { _controller: AppBundle:Uploader:chunksFinish }

uploadfile_upload:
    path:  /uploadfile/upload
    defaults: { _controller: AppBundle:UploadFile:upload }
    methods: [POST, OPTIONS]

uploadfile_browser:
    path:  /uploadfile/browser
    defaults: { _controller: AppBundle:UploadFile:browser }

uploadfile_params:
    path:  /uploadfile/params
    defaults: { _controller: AppBundle:UploadFile:params }

uploadfile_browsers:
    path:  /uploadfile/browsers
    defaults: { _controller: AppBundle:UploadFile:browsers }


editor_upload:
    path:  /editor/upload
    defaults: { _controller: AppBundle:Editor:upload }
    methods: [POST]

editor_download:
    path:  /editor/download
    defaults: { _controller: AppBundle:Editor:download }
    methods: [POST]




search:
    path:  /search
    defaults: { _controller: AppBundle:Search:index }

cloud_search:
    path:  /cloud/search
    defaults: { _controller: AppBundle:Search:cloudSearch }

settings:
    path:  /settings
    defaults: { _controller: AppBundle:Settings:profile }
    h5: true

settings_avatar_crop_modal:
    path:  /settings/avatar/crop/modal
    defaults: { _controller: AppBundle:Settings:avatarCropModal }

settings_profile_avatar_crop_modal:
    path:  /settings/profile/avatar/crop/modal
    defaults: { _controller: AppBundle:Settings:profileAvatarCropModal }

settings_avatar_fetch_partner:
    path:  /settings/avatar/fetch_partner
    defaults: { _controller: AppBundle:Settings:avatarFetchPartner }
    methods: [POST]

settings_security:
    path:  /settings/security
    defaults: { _controller: AppBundle:Settings:security }

settings_set_password:
    path:  /settings/set_password
    defaults: { _controller: AppBundle:Settings:setPassword }

settings_pay_password:
    path:  /settings/pay_password
    defaults: { _controller: AppBundle:Settings:payPassword }

settings_reset_pay_password:
    path:  /settings/reset_pay_password
    defaults: { _controller: AppBundle:Settings:resetPayPassword }

settings_find_pay_password:
    path:  /settings/find_pay_password
    defaults: { _controller: AppBundle:Settings:findPayPassword }

settings_update_pay_password:
    path:  /settings/update_pay_password
    defaults: { _controller: AppBundle:Settings:updatePayPassword }

settings_security_questions:
    path:  /settings/security_questions
    defaults: { _controller: AppBundle:Settings:securityQuestions }

setting_nickname:
    path: /settings/nickname
    defaults: { _controller: AppBundle:Settings:nickname }

update_nickname_check:
    path:  /settings/nickname/check
    defaults: { _controller: AppBundle:Settings:nicknameCheck }

settings_password:
    path:  /settings/password
    defaults: { _controller: AppBundle:Settings:password }

settings_email:
    path:  /settings/email
    defaults: { _controller: AppBundle:Settings:email }

settings_email_verify:
    path:  /settings/email/verify
    defaults: { _controller: AppBundle:Settings:emailVerify }
    methods: [POST]

settings_binds:
    path:  /settings/binds
    defaults: { _controller: AppBundle:Settings:binds }

settings_binds_unbind:
    path: /settings/unbind/{type}
    defaults: { _controller: AppBundle:Settings:unBind  }
    methods: [POST]

settings_binds_bind:
    path: /settings/bind/{type}
    defaults: { _controller: AppBundle:Settings:bind }

settings_binds_bind_callback:
    path: /settings/bind/{type}/callback
    defaults: { _controller: AppBundle:Settings:bindCallback }

settings_setup_password:
    path: /settings/setup_password
    defaults: { _controller: AppBundle:Settings:setupPassword }

settings_setup_check_nickname:
    path: /settings/setup/check_nickname
    defaults: { _controller: AppBundle:Settings:setupCheckNickname }

auth_email_confirm:
    path:  /auth/email/confirm
    defaults: { _controller: AppBundle:Auth:emailConfirm }

password_reset:
    path:  /password/reset
    defaults: { _controller: AppBundle:PasswordReset:index }

password_reset_update:
    path:  /password/reset/update
    defaults: { _controller: AppBundle:PasswordReset:update }

raw_password_update:
    path: /raw/password/update
    defaults: { _controller: AppBundle:PasswordReset:changeRawPassword }

password_reset_check_mobile:
    path:  /password/reset/check/mobile
    defaults: { _controller: AppBundle:PasswordReset:checkMobileExists }


category_all:
    path: /category/all
    defaults: { _controller: AppBundle:Category:all }

tag:
    path: /tag
    defaults: { _controller: AppBundle:Tag:index }

tag_all:
    path: /tag/all_jsonm
    defaults: { _controller: AppBundle:Tag:all }

tag_match:
    path: /tag/match_jsonp
    defaults: { _controller: AppBundle:Tag:match }

tag_show:
    path: /tag/{name}
    defaults: { _controller: AppBundle:Tag:show }

following_match_bynickname:
    path: /following/bynickname/match_jsonp
    defaults: { _controller: AppBundle:Message:match }


notification:
    path: /notification
    defaults: { _controller: AppBundle:Notification:index }

batch_notification_show:
    path: /notification/{id}
    defaults: { _controller:AppBundle:Notification:show }

my_teaching_course_sets:
    path: /my/teaching/course_sets/{filter}
    defaults: { _controller: AppBundle:My/CourseSet:teaching, filter: 'normal' }

my_teaching_open_courses:
    path: /my/teaching/open/courses/{filter}
    defaults: { _controller: AppBundle:My/OpenCourse:teaching, filter:'open'}

my_teaching_threads:
    path: /my/teaching/threads/{type}
    defaults: { _controller: AppBundle:My/Thread:teaching }

my_teaching_classrooms:
    path: /my/teaching/classrooms
    defaults: { _controller: AppBundle:My/Classroom:teaching }

my_teaching_live_calendar:
    path: /my/teaching/live/calendar
    defaults: { _controller: AppBundle:My/CourseSet:teachingLivesCalendar }

my_live_courses_learning:
    path: /my/learning/live
    defaults: { _controller: AppBundle:My/CourseSet:lives }

my_testpaper_check_list:
    path: /my/testpaper/check/{status}
    defaults: { _controller: AppBundle:My/Testpaper:checkList, status: 'reviewing' }

my_testpaper_list:
    path: /my/testpaper/list
    defaults: { _controller: AppBundle:My/Testpaper:list }

my_favorite_question_list:
    path: /my/question/favorite/list
    defaults: { _controller: AppBundle:My/Question:favoriteList }

my_favorite_question_preview:
    path: /my/question/{id}/favorite/preview
    defaults: { _controller: AppBundle:My/Question:preview }

my_question_favorite:
    path: /my/question/{questionId}/favorite
    defaults: { _controller: AppBundle:My/Question:favorite }

my_question_unfavorite:
    path: /my/question/unfavorite/{id}
    defaults: { _controller: AppBundle:My/Question:unFavorite }

my_homework_check_list:
    path: /my/homework/check/{status}
    defaults: { _controller: AppBundle:My/Homework:checkList, status: 'reviewing' }

my_homework_list:
    path: /my/homework/{status}/list
    defaults: { _controller: AppBundle:My/Homework:list, status: 'finished' }

my_orders:
    path: /my/orders
    defaults: { _controller: AppBundle:My/Order:index }
    h5: true

my_order_refunds:
    path: /my/order_refunds
    defaults: { _controller: AppBundle:My/OrderRefund:index }

my_order_refund_detail:
    path: /my/order_refund/{id}/detail
    defaults: { _controller: AppBundle:My/OrderRefund:detail }

my_order_refund_apply:
    path: /my/order_refund/{id}/apply
    defaults: { _controller: AppBundle:My/OrderRefund:applyRefund }

my_order_cancel:
    path: /my/order/{id}/cancel
    defaults: { _controller: AppBundle:My/Order:cancel }
    methods: [POST]

web_user_order_detail:
    path: /my/order/{id}/detail
    defaults: { _controller: AppBundle:My/Order:detail }

my_refunds:
    path: /my/refunds
    defaults: { _controller: AppBundle:My/Order:refunds }

income_records:
    path: /my/income_records
    defaults: { _controller: AppBundle:My/MoneyRecord:index }

payout_records:
    path: /my/payout_records
    defaults: { _controller: AppBundle:My/MoneyRecord:payout }

user_show:
    path:  /user/{id}
    defaults: { _controller: AppBundle:User:show }

user_info_fill:
    path: /user/{id}/saveinfo
    defaults: { _controller: AppBundle:User:fillInfoWhenBuy }
    methods: [POST]



user_about:
    path:  /user/{id}/about
    defaults: { _controller: AppBundle:User:about }

user_teach:
    path:  /user/{id}/teach
    defaults: { _controller: AppBundle:User:teach }

user_learn:
    path:  /user/{id}/learn
    defaults: { _controller: AppBundle:User:learn }

user_favorited:
    path:  /user/{id}/favorited
    defaults: { _controller: AppBundle:User:favorited }

user_group:
    path:  /user/{id}/group
    defaults: { _controller: AppBundle:User:group }

user_following:
    path:  /user/{id}/following
    defaults: { _controller: AppBundle:User:following }

user_follower:
    path:  /user/{id}/follower
    defaults: { _controller: AppBundle:User:follower }

user_follow:
    path:  /user/{id}/follow
    defaults: { _controller: AppBundle:User:follow }
    methods: [POST]

user_unfollow:
    path:  /user/{id}/unfollow
    defaults: { _controller: AppBundle:User:unfollow }
    methods: [POST]

user_remind_counter:
    path:  /user_remind_counter
    defaults: { _controller: AppBundle:User:remindCounter }

user_teaching_classrooms:
    path:  /user/{id}/teaching/classrooms
    defaults: { _controller: AppBundle:User:teaching }

user_learning_classrooms:
    path:  /user/{id}/learning/classrooms
    defaults: { _controller: AppBundle:User:learning }

user_card_show:
    path:  /user/{userId}/card/show
    defaults: { _controller: AppBundle:User:cardShow }

login_after_fill_userinfo:
    path:  /fill/userinfo
    defaults: { _controller: AppBundle:User:fillUserInfo }

message_create:
    path: /message/create/{toId}
    defaults: { _controller: AppBundle:Message:create }

message:
    path: /message/
    defaults: { _controller: AppBundle:Message:index }

message_check_receiver:
    path: /message/check/receiver
    defaults: { _controller: AppBundle:Message:checkReceiver }

message_send:
    path: /message/send/
    defaults: { _controller: AppBundle:Message:send }

message_send_to_receiver:
    path: /message/send/{receiverId}/to/receiver/
    defaults: { _controller: AppBundle:Message:sendTo }

message_conversation_show:
    path: /message/conversation/{conversationId}
    defaults: { _controller: AppBundle:Message:showConversation }

message_conversation_delete:
    path: /message/conversation/{conversationId}/delete
    defaults: { _controller: AppBundle:Message:deleteConversation }
    methods: [POST]

message_delete:
    path: /message/conversation/{conversationId}/message/{messageId}/delete
    defaults: { _controller: AppBundle:Message:deleteConversationMessage }
    methods: [POST]


course_set_live_capacity:
    path: /course_set/{courseSetId}/manage/course/{courseId}/live_capacity
    defaults: { _controller: AppBundle:Course/CourseManage:liveCapacity }

teacher:
    path: /teacher
    defaults: {_controller: AppBundle:Teacher:index }

teacher_search:
    path: /teacher/search
    defaults: {_controller: AppBundle:Teacher:search }

partner_login:
    path: /partner/login
    defaults: {_controller: AppBundle:Partner:login }

partner_logout:
    path: /partner/logout
    defaults: {_controller: AppBundle:Partner:logout }

partner_discuz_notify:
    path:  /partner/discuz/api/notify
    defaults: {_controller: AppBundle:PartnerDiscuz:notify }

partner_phpwind_notify:
    path: /partner/phpwind/api/notify
    defaults: {_controller: AppBundle:PartnerPhpwind:notify }


systeminfo:
    path: /systeminfo
    defaults: {_controller: AppBundle:Systeminfo:index }

setting_approval_submit:
    path: /settings/approval/submit
    defaults: { _controller: AppBundle:Settings:approvalSubmit }

article_show:
    path: /article
    defaults: { _controller: AppBundle:Article:index }

article_detail:
    path: /article/{id}
    defaults: { _controller: AppBundle:Article:detail }

article_category:
    path: /article/category/{categoryCode}
    defaults: { _controller: AppBundle:Article:category, category:'' }

article_post:
    path: /article/{id}/post
    defaults: { _controller: AppBundle:Article:post }
    methods: [POST]

article_post_reply:
    path:  /article/{articleId}/post/{postId}/
    defaults: { _controller: AppBundle:Article:postReply }
    methods: [POST]

article_like:
    path: /article/{articleId}/like
    defaults: { _controller: AppBundle:Article:like }
    methods: [POST]

article_cancel_like:
    path: /article/{articleId}/canceLike
    defaults: { _controller: AppBundle:Article:cancelLike }
    methods: [POST]

article_post_jump:
    path: /article/{articleId}/post/{postId}/jump
    defaults: { _controller: AppBundle:Article:postJump }

article_tag_show:
    path: /article/tag/{name}
    defaults: { _controller: AppBundle:Article:tag }




group:
    path:  /group
    defaults: { _controller: AppBundle:Group:index }
group_search_group:
    path:  /group/search_group
    defaults: { _controller: AppBundle:Group:search }
group_add:
    path:  /group/add
    defaults: { _controller: AppBundle:Group:addGroup }

group_show:
    path:  /group/{id}
    defaults: { _controller: AppBundle:Group:groupIndex }

group_join:
    path:  /group/{id}/join
    defaults: { _controller: AppBundle:Group:groupJoin }
    methods: [POST]

group_exit:
    path:  /group/{id}/exit
    defaults: { _controller: AppBundle:Group:groupExit }
    methods: [POST]

group_member:
    path:  /group/member/{id}
    defaults: { _controller: AppBundle:Group:groupMember }
group_member_delete:
    path:  /group/member/delete/{id}
    defaults: { _controller: AppBundle:Group:deleteMembers }
    methods: [POST]
group_set_admin:
    path:  /group/set/admin/{id}
    defaults: { _controller: AppBundle:Group:setAdmin }
group_remove_admin:
    path:  /group/remove/admin/{id}
    defaults: { _controller: AppBundle:Group:removeAdmin }
group_set:
    path:  /group/{id}/setting/info
    defaults: { _controller: AppBundle:Group:groupSet }
group_setLogoCrop:
    path:  /group/{id}/setting/logoCrop
    defaults: { _controller: AppBundle:Group:logoCrop }
group_logo_set:
    path:  /group/{id}/setting/logo
    defaults: { _controller: AppBundle:Group:setGrouplogo }
group_edit:
    path:  /group/info/edit/{id}
    defaults: { _controller: AppBundle:Group:groupEdit }
group_backgroundlogo_set:
    path:  /group/set/backgroundlogo/{id}
    defaults: { _controller: AppBundle:Group:setGroupBackgroundLogo }
group_search:
    path:  /group/{id}/serach
    defaults: { _controller: AppBundle:GroupThread:searchResult }
group_thread_post:
    path:  /group/thread/{groupId}/{threadId}/post
    defaults: { _controller: AppBundle:GroupThread:postThread }
group_thread_add:
    path:  /group/{id}/thread/create
    defaults: { _controller: AppBundle:GroupThread:addThread }
group_thread_update:
    path:  /group/{id}/thread/{threadId}/update
    defaults: { _controller: AppBundle:GroupThread:updateThread }
group_thread_check_user:
    path:  /mygroup/checkuser
    defaults: { _controller: AppBundle:GroupThread:checkUser }
group_thread_show:
    path:  /group/{id}/thread/{threadId}
    defaults: { _controller: AppBundle:GroupThread:groupThreadIndex }
group_thread_collect:
    path:  /group/thread/{threadId}/collect
    defaults: { _controller: AppBundle:GroupThread:collect }
    methods: [POST]
group_thread_uncollect:
    path:  /group/thread/{threadId}/uncollect
    defaults: { _controller: AppBundle:GroupThread:uncollect }
    methods: [POST]
group_thread_setElite:
    path:  /group/thread/{threadId}/setElite
    defaults: { _controller: AppBundle:GroupThread:setElite }
group_thread_removeElite:
    path:  /group/thread/{threadId}/removeElite
    defaults: { _controller: AppBundle:GroupThread:removeElite }
group_thread_setStick:
    path:  /group/thread/{threadId}/setStick
    defaults: { _controller: AppBundle:GroupThread:setStick }
group_thread_removeStick:
    path:  /group/thread/{threadId}/removeStick
    defaults: { _controller: AppBundle:GroupThread:removeStick }
group_thread_closeThread:
    path:  /group/thread/{threadId}/closeThread/{memberId}
    defaults: { _controller: AppBundle:GroupThread:closeThread }
group_thread_deletePost:
    path:  /group/thread/deletePost/{postId}
    defaults: { _controller: AppBundle:GroupThread:deletePost }
    methods: [POST]
group_thread_post_reply:
    path:  /group/post/{postId}/reply
    defaults: { _controller: AppBundle:GroupThread:postReply }
group_thread_adopt:
    path:  /thread/{postId}/adopt
    defaults: { _controller: AppBundle:GroupThread:adopt }
group_upload:
    path:  /group/thread/upload
    defaults: { _controller: AppBundle:GroupThread:upload }



user_password_check:
    path:   /user/password/check
    defaults: { _controller: AppBundle:User:checkPassword }






settings_check_login_password:
    path:  /settings/check_login_password
    defaults: { _controller: AppBundle:Settings:passwordCheck }
    methods: [POST]



esbar_my_classroom:
    path:  /esbar/my/classroom
    defaults: { _controller: AppBundle:EsBar/EsBar:classroom }

esbar_my_course:
    path:  /esbar/my/course
    defaults: { _controller: AppBundle:EsBar/EsBar:course }

esbar_my_notify:
    path:  /esbar/my/notify
    defaults: { _controller: AppBundle:EsBar/EsBar:notify }

esbar_my_practice:
    path:  /esbar/my/practice/{status}
    defaults: { _controller: AppBundle:EsBar/EsBar:practice }

esbar_my_study_center:
    path:  /esbar/my/study_center
    defaults: { _controller: AppBundle:EsBar/EsBar:studyCenter }

my:
    path: /my
    defaults: { _controller: AppBundle:My/Course:index }

my_cards:
    path:  /my/cards
    defaults: { _controller: AppBundle:My/Card:index }

card_info:
    path:  /card/info
    defaults: { _controller: AppBundle:My/Card:cardInfo }


importer_check:
    path: /importer/{type}/check
    defaults: { _controller: AppBundle:Importer:check}
    methods: [POST]

importer_import:
    path: /importer/{type}/import
    defaults: { _controller: AppBundle:Importer:import}
    methods: [POST]

importer_index:
    path: /importer/{type}/index
    defaults: { _controller: AppBundle:Importer:template}


#activity
course_activity_trigger:
    path: /course/{courseId}/activity/{activityId}/trigger
    defaults: { _controller: AppBundle:Activity/Activity:trigger }
    methods: [POST]

course_acitvity_watch:
    path:  /course/{courseId}/activity/{id}/watch
    defaults: { _controller: AppBundle:Activity/Video:watch}

course_activity_download:
    path: /course/{courseId}/activiy/{activityId}/download
    defaults: { _controller: AppBundle:Activity/Download:downloadFile }

course_text_activity_auto_save:
    path: /course/{courseId}/activity/{activityId}/text/auto_save
    defaults: { _controller: AppBundle:Activity/Text:autoSave }
    methods: [POST]

#task
course_task_show:
    path:  /course/{courseId}/task/{id}/show
    defaults: { _controller: AppBundle:Task:show }

course_task_preview:
    path:  /course/{courseId}/task/{id}/preview
    defaults: { _controller: AppBundle:Task:preview }

course_task_content_preview:
    path:  /course/{courseId}/task/{id}/content/preview
    defaults: { _controller: AppBundle:Task:contentPreview }

course_task_activity_show:
    path:  /course/{courseId}/task/{id}/activity_show
    defaults: { _controller: AppBundle:Task:taskActivity }

course_task_trigger:
    path:  /course/{courseId}/task/{id}/trigger
    defaults: { _controller: AppBundle:Task:trigger }

course_task_finish:
    path:  /course/{courseId}/task/{id}/finish
    defaults: { _controller: AppBundle:Task:finish }

course_task_qrcode:
    path:  /course/{courseId}/task/{id}/qrcode
    defaults: { _controller: AppBundle:Task:qrcode }

course_task_finished_prompt:
    path:  /course/{courseId}/task/{id}/finished_prompt
    defaults: { _controller: AppBundle:Task:taskFinishedPrompt }

course_manage_task_pre_create_check:
    path:  /course/{courseId}/task/pre_create_check
    defaults: { _controller: AppBundle:TaskManage:preCreateCheck }
    methods: [POST]

course_manage_task_pre_update_check:
    path:  /course/{courseId}/task/{taskId}/pre_update_check
    defaults: { _controller: AppBundle:TaskManage:preUpdateCheck }
    methods: [POST]


course_manage_task_create:
    path:  /course/{courseId}/task
    defaults: { _controller: AppBundle:TaskManage:create }

course_manage_task_batch_create:
    path:  /course/{courseId}/task/batch/modal
    defaults: { _controller: AppBundle:TaskManage:batchCreateTasks }

course_manage_task_publish:
    path:  /course/{courseId}/task/{id}/publish
    defaults: { _controller: AppBundle:TaskManage:publish }

course_manage_task_unpublish:
    path:  /course/{courseId}/task/{id}/unpublish
    defaults: { _controller: AppBundle:TaskManage:unPublish }

course_manage_task_fields:
    path:  /course/{courseId}/task_fields/{mode}
    defaults: { _controller: AppBundle:TaskManage:taskFields }

course_manage_task_update:
    path:  /course/{courseId}/task/{id}/update
    defaults: { _controller: AppBundle:TaskManage:update }

course_manage_task_delete:
    path:  /course/{courseId}/task/{taskId}/delete
    defaults: { _controller: AppBundle:TaskManage:delete }

course_manage_task_replay_edit:
  path: /course/{courseId}/task/{taskId}/replay/edit
  defaults: { _controller: AppBundle:Course/CourseManage:editTaskReplay }

course_manage_task_replay_title_update:
  path:  /course/{courseId}/task/{taskId}/replay/{replayId}/update_title
  defaults: { _controller: AppBundle:Course/CourseManage:updateTaskReplayTitle }
  methods: [POST]

course_manage_task_replay_upload:
  path:  /course/{courseId}/task/{taskId}/replay/upload
  defaults: { _controller: AppBundle:Course/CourseManage:uploadReplay }

course_manage_task_replay_create:
  path:  /course/{courseId}/task/{taskId}/replay/create
  defaults: { _controller: AppBundle:Course/CourseManage:createReplay }
  methods: [POST]

course_manage_task_learn_detail:
  path:  /course/{courseId}/task/{taskId}/learn/detail
  defaults: { _controller: AppBundle:TaskLearnData:learnDataDetail }

course_manage_student_learn_detail_modal:
  path:  /course/{courseId}/student/{userId}/learn/detail
  defaults: { _controller: AppBundle:TaskLearnData:studentDataDetailModal }

task_live_entry:
  path: /course/{courseId}/activity/{activityId}/live_entry
  defaults: {_controller:  AppBundle:Activity/Live:liveEntry}

live_activity_replay_entry:
  path: /course/{courseId}/activity/{activityId}/replay/{replayId}/entry
  defaults: { _controller: AppBundle:Activity/Live:replayEntry }

live_activity_replay_url:
  path: /course/{courseId}/activity/{activityId}/replay/{replayId}/play
  defaults: { _controller: AppBundle:Activity/Live:replayUrl }

task_live_replay_player:
  path: /course/{courseId}/activity/{activityId}/replay
  defaults: {_controller: AppBundle:Activity/Live:liveReplay }



#task_plugin
course_task_note_save:
  path: /course/{courseId}/task/{taskId}/note/save
  defaults: { _controller: AppBundle:Note:saveCourseNote}

course_task_show_plugins:
  path: /course/{courseId}/task/{taskId}/show/plugins
  defaults: { _controller: AppBundle:Task:taskPlugins }

course_task_show_plugin_task_list:
  path: /course/{courseId}/task/{taskId}/plugin/task_list
  defaults: { _controller: AppBundle:TaskPlugin:taskList }

course_task_show_plugin_task_list_by_paging:
  path: /course/{courseId}/plugin/task_list/paging
  defaults: { _controller: AppBundle:TaskPlugin:taskListByPaging }

course_task_plugin_note:
  path: /course/{courseId}/task/{taskId}/plugin/note
  defaults: { _controller: AppBundle:TaskPlugin:note }

course_task_plugin_threads:
  path: /course/{courseId}/task/{taskId}/plugin/threads
  defaults: { _controller: AppBundle:TaskPlugin:threads }

course_task_plugin_thread_create:
  path: /course/{courseId}/task/{taskId}/plugin/thread/create
  defaults: { _controller: AppBundle:TaskPlugin:createThread }
  methods: [POST]

course_task_plugin_thread_show:
  path: /course/{courseId}/task/{taskId}/plugin/thread/{threadId}
  defaults: { _controller: AppBundle:TaskPlugin:thread }
  methods: [GET]

course_task_plugin_thread_answer:
  path: /course/{courseId}/task/{taskId}/plugin/thread/{threadId}/answer
  defaults: { _controller: AppBundle:TaskPlugin:answerQuestion }
  methods: [POST]

course_manage_chapter_manage:
    path:  /course/{courseId}/manage/chapter/manage
    defaults: { _controller: AppBundle:Course/ChapterManage:manage}

course_manage_chapter_delete:
    path:  /course/{courseId}/manage/chapter/{chapterId}/delete
    defaults: { _controller: AppBundle:Course/ChapterManage:delete }
    methods: [POST]

course_manage_lesson_create:
    path:  /course/{courseId}/lesson/create
    defaults: { _controller: AppBundle:Course/LessonManage:create }

course_manage_lesson_batch_create:
    path:  /course/{courseId}/lesson/batch_create
    defaults: { _controller: AppBundle:Course/LessonManage:batchCreate }

course_manage_lesson_valid_num:
    path: /course/{courseId}/lesson/valid_num
    defaults: { _controller: AppBundle:Course/LessonManage:validLessonNum }
    methods: [POST]

course_manage_lesson_update:
    path:  /course/{courseId}/lesson/{lessonId}/update
    defaults: { _controller: AppBundle:Course/LessonManage:update }

course_manage_lesson_publish:
    path:  /course/{courseId}/manage/lesson/{lessonId}/publish
    defaults: { _controller: AppBundle:Course/LessonManage:publish }

course_manage_lesson_unpublish:
    path:  /course/{courseId}/manage/lesson/{lessonId}/unpublish
    defaults: { _controller: AppBundle:Course/LessonManage:unpublish }

course_manage_lesson_delete:
    path:  /course/{courseId}/manage/lesson/{lessonId}/delete
    defaults: { _controller: AppBundle:Course/LessonManage:delete }

course_manage_lesson_set_optional:
    path:  /course/{courseId}/manage/lesson/{lessonId}/setoptional
    defaults: { _controller: AppBundle:Course/LessonManage:setOptional }
    methods: [POST]

course_manage_lesson_unset_optional:
    path:  /course/{courseId}/manage/lesson/{lessonId}/unsetoptional
    defaults: { _controller: AppBundle:Course/LessonManage:unsetOptional }
    methods: [POST]

course_manage_change_lesson_show_status:
    path:  /course/{courseId}/manage/change/lesson/show/status
    defaults: { _controller: AppBundle:Course/CourseManage:showPublish }
    methods: [POST]

#course
course_set_explore:
   path:  /course/explore/{category}
   defaults: { _controller: AppBundle:Explore:courseSets, category:'' }
   h5: true

live_course_set_explore:
    path:  /live
    defaults: { _controller: AppBundle:Course/LiveCourseSet:explore }

course_set_manage_sync:
  path: /course_set/{id}/manage/sync
  defaults: {_controller: AppBundle:Course/CourseSetManage:syncInfo}

course_set_manage_unlock:
  path: /course_set/{id}/manage/unlock
  defaults: {_controller: AppBundle:Course/CourseSetManage:unlock}

course_set_manage_unlock_confirm:
  path: /course_set/{id}/manage/unlock_confirm
  defaults: {_controller: AppBundle:Course/CourseSetManage:unlockConfirm}

course_set_manage_courses:
  path: /course_set/{courseSetId}/manage/courses
  defaults: {_controller: AppBundle:Course/CourseManage:list}

course_set_manage_course_create:
  path: /course_set/{courseSetId}/manage/course/create
  defaults: {_controller: AppBundle:Course/CourseManage:create}

course_set_manage_course_copy:
  path: /course_set/{courseSetId}/manage/course/copy
  defaults: {_controller: AppBundle:Course/CourseManage:copy}

course_set_manage_course_info:
  path: /course_set/{courseSetId}/manage/course/{courseId}/info
  defaults: {_controller: AppBundle:Course/CourseManage:info}

course_set_manage_course_overview:
  path: /course_set/{courseSetId}/manage/course/{courseId}/overview
  defaults: {_controller: AppBundle:Course/CourseManage:overview}

course_set_manage_task_detail:
    path: /course/{courseId}/task/detail
    defaults: {_controller: AppBundle:TaskLearnData:taskDetailList}

course_set_manage_student_detail:
    path: /course/{courseId}/student/detail
    defaults: {_controller: AppBundle:TaskLearnData:studentDetail}

course_set_manage_course_trendency:
  path: /course_set/{courseSetId}/manage/course/{courseId}/trendency
  defaults: { _controller: AppBundle:Course/CourseManage:trendency }

course_set_manage_course_tasks:
  path: /course_set/{courseSetId}/manage/course/{courseId}/tasks
  defaults: {_controller: AppBundle:Course/CourseManage:tasks}

course_set_manage_course_replay:
  path: /course_set/{courseSetId}/manage/course/{courseId}/replay
  defaults: { _controller: AppBundle:Course/CourseManage:replay }

course_set_manage_course_marketing:
  path: /course_set/{courseSetId}/manage/course/{courseId}/marketing
  defaults: {_controller: AppBundle:Course/CourseManage:marketing}

course_set_manage_course_teachers:
  path: /course_set/{courseSetId}/manage/course/{courseId}/teachers
  defaults: {_controller: AppBundle:Course/CourseManage:teachers}

course_set_manage_course_teachers_match:
  path: /course_set/{courseSetId}/manage/course/{courseId}/teachers_match
  defaults: {_controller: AppBundle:Course/CourseManage:teachersMatch}

course_set_manage_course_students:
  path: /course_set/{courseSetId}/manage/course/{courseId}/students
  defaults: {_controller: AppBundle:Course/StudentManage:students}

course_set_manage_course_records:
  path: /course_set/{courseSetId}/manage/course/{courseId}/{type}/records
  defaults: {_controller: AppBundle:Course/StudentManage:studentRecords}

course_set_manage_course_students_add:
  path: /course_set/{courseSetId}/manage/course/{courseId}/students/add
  defaults: {_controller: AppBundle:Course/StudentManage:createCourseStudent}

course_set_manage_course_students_remove:
  path: /course_set/{courseSetId}/manage/course/{courseId}/students/{userId}/remove
  defaults: {_controller: AppBundle:Course/StudentManage:removeCourseStudent}
  methods: [POST]

course_set_manage_course_students_remark:
  path:  /course_set/{courseSetId}/manage/course/{courseId}/student/{userId}/remark
  defaults: { _controller: AppBundle:Course/StudentManage:remark }

course_set_manage_course_students_deadline_batch:
  path:  /course_set/{courseSetId}/manage/course/{courseId}/student/deadline
  defaults: { _controller: AppBundle:Course/StudentManage:batchUpdateMemberDeadlines }

course_set_manage_course_students_deadline_batch_day_check:
  path:  /course_set/{courseSetId}/manage/course/{courseId}/student/day/check
  defaults: { _controller: AppBundle:Course/StudentManage:checkDay }

course_set_manage_course_students_deadline_batch_deadline_check:
  path:  /course_set/{courseSetId}/manage/course/{courseId}/student/deadline/check
  defaults: { _controller: AppBundle:Course/StudentManage:checkDeadline }




course_set_manage_course_students_process:
  path: /course_set/{courseSetId}/manage/course/{courseId}/students/{userId}/process
  defaults: {_controller: AppBundle:Course/StudentManage:studyProcess}

course_set_manage_course_students_check:
  path: /course_set/{courseSetId}/manage/course/{courseId}/students/check
  defaults: {_controller: AppBundle:Course/StudentManage:checkStudent}

course_set_manage_course_students_show:
   path:  /course_set/{courseSetId}/manage/course/{courseId}/students/{userId}/show
   defaults: { _controller: AppBundle:Course/StudentManage:show }

course_set_manage_course_students_defined_show:
   path:  /course_set/{courseSetId}/manage/course/{courseId}/students/{userId}/defined_show
   defaults: { _controller: AppBundle:Course/StudentManage:definedShow }

course_set_manage_course_orders:
  path: /course_set/{courseSetId}/manage/course/{courseId}/orders
  defaults: {_controller: AppBundle:Course/CourseManage:orders}

course_manage_question_marker:
    path:  /course_set/{courseSetId}/manage/course/{courseId}/questionmarker
    defaults: { _controller: AppBundle:Course/CourseManage:questionMarkerStats }

course_manage_question_marker_analysis:
    path:  /course_set/{courseSetId}/manage/course/{courseId}/questionmarker/{questionMarkerId}/analysis
    defaults: { _controller: AppBundle:Course/CourseManage:questionMarkerAnalysis }

course_set_manage_course_close_check:
  path: /course_set/{courseSetId}/course/{courseId}/close_check
  defaults: {_controller: AppBundle:Course/CourseManage:closeCheck}
  methods: [POST]

course_set_manage_course_close:
  path: /course_set/{courseSetId}/course/{courseId}/close
  defaults: {_controller: AppBundle:Course/CourseManage:close}
  methods: [POST]

course_set_manage_course_delete:
  path: /course_set/{courseSetId}/course/{courseId}/delete
  defaults: {_controller: AppBundle:Course/CourseManage:delete}
  methods: [POST]

course_set_manage_course_publish:
  path: /course_set/{courseSetId}/course/{courseId}/publish
  defaults: {_controller: AppBundle:Course/CourseManage:publish}
  methods: [POST]

course_set_manage_course_pre_publish:
  path: /course_set/{courseSetId}/course/{courseId}/pre_publish
  defaults: {_controller: AppBundle:Course/CourseManage:prePublish}
  methods: [POST]

course_set_manage_course_publish_set_title:
  path: /course_set/{courseSetId}/course/{courseId}/publish_set_title
  defaults: {_controller: AppBundle:Course/CourseManage:publishSetTitle}

course_manage_items_sort:
  path:  /course/{courseId}/manage/items/sort
  defaults: { _controller: AppBundle:Course/CourseManage:courseItemsSort }
  methods: ['POST']

#my_course
my_courses_learning:
    path: /my/courses/learning
    defaults: { _controller: AppBundle:My/Course:learning }
    h5: false

my_courses_learned:
    path: /my/courses/learned
    defaults: { _controller: AppBundle:My/Course:learned }

my_courses_live_calendar:
    path: /my/courses/live/calendar
    defaults: { _controller: AppBundle:My/Course:learningLivesCalendar }

#my_course_set
my_course_sets_favorite:
    path: /my/courses/favorite
    defaults: { _controller: AppBundle:My/CourseSet:favorite }

my_classrooms:
    path: /my/classrooms
    defaults: { _controller: AppBundle:My/Classroom:classroom }

my_questions:
    path: /my/questions
    defaults: { _controller: AppBundle:My/Thread:questions }


#course_set
course_set_manage_create:
  path: /course_set/create
  defaults: {_controller: AppBundle:Course/CourseSetManage:create}

course_set_show:
  path: /course_set/{id}
  defaults: {_controller: AppBundle:Course/CourseSet:show}

course_qrcode:
  path: /course/{id}/qrcode
  defaults: { _controller: AppBundle:Course/Course:qrcode }
  methods: [POST]

course_set_favorite:
  path: /course_set/{id}/favorite
  defaults: { _controller: AppBundle:Course/CourseSet:favorite }
  methods: [POST]

course_set_unfavorite:
  path: /course_set/{id}/unfavorite
  defaults: { _controller: AppBundle:Course/CourseSet:unfavorite }
  methods: [POST]

course_exit:
  path: /course/{id}/exit
  defaults: {_controller: AppBundle:Course/Course:exit}
  methods: [POST]

course_exit_modal:
  path: /course/show_exit_modal
  defaults: {_controller: AppBundle:Course/Course:exitModal}

course_thread_create:
   path:  /course/{courseId}/thread/create
   defaults: { _controller: AppBundle:Course/Thread:create }

course_thread_show:
   path:  /course/{courseId}/thread/{threadId}
   defaults: { _controller: AppBundle:Course/Thread:show }

course_thread_post:
   path:  /course/{courseId}/thread/{threadId}/post
   defaults: { _controller: AppBundle:Course/Thread:post }

course_thread_edit:
   path:  /course/{courseId}/thread/{threadId}/edit
   defaults: { _controller: AppBundle:Course/Thread:edit }

course_thread_post_delete:
   path:  /course/{courseId}/thread/{threadId}/post/{postId}/delete
   defaults: { _controller: AppBundle:Course/Thread:deletePost }
   methods: [POST]

course_thread_post_edit:
   path:  /course/{courseId}/thread/{threadId}/post/{postId}/edit
   defaults: { _controller: AppBundle:Course/Thread:editPost }

course_thread_stick:
   path:  /course/{courseId}/thread/{threadId}/stick
   defaults: { _controller: AppBundle:Course/Thread:stick }
   methods: [POST]

course_thread_unstick:
   path:  /course/{courseId}/thread/{threadId}/unstick
   defaults: { _controller: AppBundle:Course/Thread:unstick }
   methods: [POST]

course_thread_elite:
   path:  /course/{courseId}/thread/{threadId}/elite
   defaults: { _controller: AppBundle:Course/Thread:elite }
   methods: [POST]

course_thread_unelite:
   path:  /course/{courseId}/thread/{threadId}/unelite
   defaults: { _controller: AppBundle:Course/Thread:unelite }
   methods: [POST]

course_thread_delete:
   path:  /course/{courseId}/thread/{threadId}/delete
   defaults: { _controller: AppBundle:Course/Thread:delete }
   methods: [POST]

course_set_manage:
  path: /course_set/{id}/manage
  defaults: {_controller: AppBundle:Course/CourseSetManage:index}

course_set_manage_base:
  path: /course_set/{id}/manage/base
  defaults: {_controller: AppBundle:Course/CourseSetManage:base}

course_set_manage_cover_crop:
  path: /course_set/{id}/manage/cover_crop
  defaults: {_controller: AppBundle:Course/CourseSetManage:coverCrop}

course_set_manage_files:
  path: /course_set/{id}/manage/files
  defaults: {_controller: AppBundle:Course/CourseSetFileManage:index}

course_set_manage_file_show:
   path:  /course_set/{id}/manage/file/{fileId}
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:show }

course_set_manage_file_convert:
   path:  /course_set/{id}/manage/file/{fileId}/convert
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:convert }
   methods: [POST]

course_set_manage_file_status:
   path:  /course_set/manage/file/status
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:fileStatus }

course_set_manage_delete_materials_show:
   path:  /course_set/{id}/manage/show/delete/materials
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:deleteMaterials }
   methods: [POST]

course_set_manage_delete_materials:
   path:  /course_set/{id}/manage/delete/materials
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:deleteCourseFiles }
   methods: [POST]

course_set_manage_retry_transcode:
   path:  /course_set/{id}/manage/file/{fileId}/retry_transcode
   defaults: { _controller: AppBundle:Course/CourseSetFileManage:retryTranscode }
   methods: [POST]


course_set_manage_publish:
  path: /course_set/{id}/manage/publish
  defaults: {_controller: AppBundle:Course/CourseSetManage:publish}

course_set_manage_close:
  path: /course_set/{id}/manage/close
  defaults: {_controller: AppBundle:Course/CourseSetManage:close}

course_review_create:
   path:  /course/{id}/review/create
   defaults: { _controller: AppBundle:Course/Review:create }
   methods: [POST]

course_review_post:
  path:  /course/{courseId}/review/{reviewId}/post
  defaults: { _controller: AppBundle:Course/Review:post }

course_review_delete:
  path:  /course/{courseId}/review/{reviewId}/delete
  defaults: { _controller: AppBundle:Course/Review:delete }

course_material_download:
    path:  /course/{courseId}/material/{materialId}/download
    defaults: { _controller: AppBundle:Course/Material:download }

course_material_delete:
    path:  /course/{id}/material/{materialId}/delete
    defaults: { _controller: AppBundle:Course/Material:delete }
    methods: [POST]


#file chooser
media_materiallib_choose:
  path: /media/materiallib/choose
  defaults: { _controller: AppBundle:FileChooser:materialChoose }

media_materiallib_contacts:
  path: /media/materiallib/contacts
  defaults: { _controller: AppBundle:FileChooser:findMySharingContacts }

media_course_file_choose:
  path: /media/coursefile/{courseId}/choose
  defaults: { _controller: AppBundle:FileChooser:courseFileChoose }

media_video_import:
  path: /media/course/{courseId}/import
  defaults: { _controller: AppBundle:FileChooser:import }

#Uploader
uploader_auth_v2:
  path:  /uploader/v2/auth
  defaults: { _controller: AppBundle:Uploader:auth }
  methods: [GET]

uploader_init_v2:
  path:  /uploader/v2/init
  defaults: { _controller: AppBundle:Uploader:init }
  methods: [GET]

uploader_finished_v2:
  path:  /uploader/v2/finished
  defaults: { _controller: AppBundle:Uploader:finished }
  methods: [GET]

#question
course_set_manage_question:
  path: /course_set/{id}/manage/question
  defaults: { _controller: AppBundle:Question/Manage:index }

course_set_manage_question_create:
  path: /course_set/{id}/manage/question/{type}/create
  defaults: { _controller: AppBundle:Question/Manage:create }

course_set_manage_question_update:
  path: /course_set/{courseSetId}/manage/question/{questionId}/update
  defaults: { _controller: AppBundle:Question/Manage:update }

course_set_manage_question_delete:
  path: /course_set/{courseSetId}/manage/question/delete/{questionId}
  defaults: { _controller: AppBundle:Question/Manage:delete }
  methods: [POST]

course_set_manage_question_deletes:
  path: /course_set/{courseSetId}/manage/question/deletes
  defaults: { _controller: AppBundle:Question/Manage:deletes }
  methods: [POST]

course_set_manage_question_preview:
  path: /course_set/{courseSetId}/manage/question/{questionId}/preview
  defaults: { _controller: AppBundle:Question/Manage:preview }

course_set_manage_question_picker:
  path: /course_set/{id}/manage/question/picker
  defaults: { _controller: AppBundle:Question/Manage:questionPicker }

course_set_manage_question_picked:
  path:  /course_set/{courseSetId}/manage/question/picked
  defaults: { _controller: AppBundle:Question/Manage:pickedQuestion }

course_set_manage_question_check:
  path: /course_set/{id}/manage/question/check
  defaults: { _controller: AppBundle:Question/Manage:check }

course_set_manage_show_tasks:
  path: /course_set/{courseSetId}/manage/show/tasks
  defaults: { _controller: AppBundle:Question/Manage:showTasks }
  methods: [POST]

course_set_manage_question_check_num:
  path: /course_set/{courseSetId}/manage/question/check/num
  defaults: { _controller: AppBundle:Question/Manage:showQuestionTypesNum }
  methods: [POST]

#testpaper
course_set_manage_testpaper:
  path: /course_set/{id}/manage/testpaper
  defaults: { _controller: AppBundle:Testpaper/Manage:index }

course_set_manage_testpaper_create:
  path: /course_set/{id}/manage/testpaper/create
  defaults: { _controller: AppBundle:Testpaper/Manage:create }

course_set_manage_testpaper_update:
    path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/update
    defaults: { _controller: AppBundle:Testpaper/Manage:update }

course_set_manage_testpaper_info:
  path: /course_set/{id}/manage/testpaper/info
  defaults: { _controller: AppBundle:Testpaper/Manage:info }
  methods: [POST]

course_set_manage_testpaper_publish:
  path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/publish
  defaults: { _controller: AppBundle:Testpaper/Manage:publish }
  methods: [POST]

course_set_manage_testpaper_close:
  path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/close
  defaults: { _controller: AppBundle:Testpaper/Manage:close }
  methods: [POST]

course_set_manage_testpaper_delete:
  path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/delete
  defaults: { _controller: AppBundle:Testpaper/Manage:delete }
  methods: [POST]

course_set_manage_testpaper_deletes:
  path: /course_set/{courseSetId}/manage/testpaper/deletes
  defaults: { _controller: AppBundle:Testpaper/Manage:deletes }
  methods: [POST]

course_set_manage_testpaper_preivew:
  path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/preview
  defaults: { _controller: AppBundle:Testpaper/Manage:preview }

course_set_manage_testpaper_questions:
  path: /course_set/{courseSetId}/manage/testpaper/{testpaperId}/questions
  defaults: { _controller: AppBundle:Testpaper/Manage:questions }

course_manage_testpaper_check:
  path: /course/{id}/manage/testpaper/{resultId}/check
  defaults: { _controller: AppBundle:Course/TestpaperManage:check }

course_manage_exam_next_result_check:
  path: /course/{id}/manage/activity/{activityId}/exam/check
  defaults: { _controller: AppBundle:Course/TestpaperManage:resultNextCheck }

course_manage_testpaper_result_graph:
  path: /course/{id}/activity/{activityId}/testpaper/graph
  defaults: { _controller: AppBundle:Course/TestpaperManage:resultGraph }

testpaper_check:
  path: /testpaper/{resultId}/check
  defaults: { _controller: AppBundle:Course/TestpaperManage:checkForword }

course_manage_testpaper_check_list:
  path: /course/{id}/manage/testpaper/check
  defaults: { _controller: AppBundle:Course/TestpaperManage:checkList }

course_manage_testpaper_result_list:
  path: /course/{id}/manage/testpaper/{testpaperId}/{activityId}/result
  defaults: { _controller: AppBundle:Course/TestpaperManage:resultList }

course_manage_exam_result_anlysis:
  path: /course/{id}/manage/exam/activity/{activityId}/analysis
  defaults: { _controller: AppBundle:Course/TestpaperManage:resultAnalysis }

course_manage_testpaper_questions:
  path: /course/{courseId}/manage/testpaper/{testpaperId}/items
  defaults: { _controller: AppBundle:Testpaper/Manage:questions }

course_set_manage_testpaper_build_check:
  path: /course_set/{courseSetId}/manage/{type}/build/check
  defaults: { _controller: AppBundle:Testpaper/Manage:buildCheck }

testpaper_do:
  path: /lesson/{lessonId}/testpaper/{testId}/do
  defaults: { _controller: AppBundle:Testpaper/Testpaper:doTestpaper }

testpaper_show:
  path: /testpaper/{resultId}/show
  defaults: { _controller: AppBundle:Testpaper/Testpaper:doTest }

testpaper_result_show:
  path: /testpaper/result/{resultId}/show
  defaults: { _controller: AppBundle:Testpaper/Testpaper:showResult }

testpaper_result_submit:
  path: /testpaper/result/{resultId}/submit
  defaults: { _controller: AppBundle:Testpaper/Testpaper:submitTest }
  methods: [POST]

testpaper_finish:
  path: /testpaper/result/{resultId}/finish
  defaults: { _controller: AppBundle:Testpaper/Testpaper:finishTest }

testpaper_do_suspend:
  path: /testpaper/result/{resultId}/suspend
  defaults: { _controller: AppBundle:Testpaper/Testpaper:testSuspend }
  methods: [POST]





#classroom

classroom_manage:
    path: /classroom/{id}/manage
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:index }

classroom_manage_courses:
    path: /classroom/{id}/manage/courses
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:courses }

classroom_manage_course_remove:
    path: /classroom/{id}/manage/course/{courseId}/remove
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:removeCourse }

classroom_courses_select:
    path: /classroom/{id}/courses/select
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:coursesSelect }

classroom_manage_set_info:
    path: /classroom/{id}/manage/set_info
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:setInfo }

classroom_manage_set_picture:
    path: /classroom/{id}/manage/set_picture
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:setPicture }

classroom_manage_picture_crop:
    path: /classroom/{id}/manage/picture_crop
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:pictureCrop }

classroom_manage_set_price:
    path: /classroom/{id}/manage/price/set
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:setPrice }

classroom_manage_students:
    path: /classroom/{id}/manage/students
    defaults: { _controller:AppBundle:Classroom/ClassroomManage:students }

classroom_manage_aduitor:
    path: /classroom/{id}/manage/aduitor
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:aduitor }

classroom_manage_record:
    path: /classroom/{id}/manage/record/{type}
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:record }

classroom_manage_service:
    path: /classroom/{id}/manage/service
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:service}

classroom_manage_teachers:
    path: /classroom/{id}/manage/teachers
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:teachers }

classroom_manage_headteacher:
    path: /classroom/{id}/manage/headteacher
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:headteacher }

classroom_manage_assistants:
    path: /classroom/{id}/manage/assistants
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:assistants }

classroom_manage_publish:
    path: /classroom/{id}/manage/publish
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:publish }
    methods: [POST]

classroom_manage_close:
    path: /classroom/{id}/manage/close
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:close }
    methods: [POST]

classroom_manage_checkName:
    path: /classroom/manage/checkName
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:checkName }

classroom_manage_student_remark:
    path:  /classroom/{classroomId}/manage/student/{userId}/remark
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:remark }

classroom_manage_student_remove:
    path:  /classroom/{classroomId}/manage/student/{userId}/remove
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:remove }
    methods: [POST]

classroom_manage_student_create:
    path:  /classroom/{id}/manage/student/create
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:create }

classroom_manage_student_check:
    path:  /classroom/{id}/manage/student_check
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:checkStudent }

classroom_manage_student_export_datas:
    path:  /classroom/{id}/manage/student/export/{role}/datas
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:exportDatas }

classroom_manage_student_export_csv:
    path:  /classroom/{id}/manage/student/export
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:exportCsv }

classroom_manage_student_import:
    path:  /classroom/{id}/manage/student/import
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:importUsers }

classroom_manage_student_to_base:
    path:  /classroom/{id}/manage/student/importing
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:excelDataImport }
    methods: [POST]

classroom_manage_testpaper:
    path:  /classroom/{id}/manage/testpaper/list
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:testpaper }

classroom_manage_testpaper_result_list:
  path: /classroom/{id}/manage/testpaper/{testpaperId}/{activityId}/result
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:testpaperResultList }

classroom_manage_testpaper_check:
  path: /classroom/{id}/manage/testpaper/{resultId}/check
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:testpaperCheck }

classroom_manage_exam_result_anlysis:
  path: /classroom/{id}/manage/exam/activity/{activityId}/analysis
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:resultAnalysis }

classroom_manage_exam_next_result_check:
  path: /classroom/{id}/manage/activity/{activityId}/exam/check
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:resultNextCheck }

classroom_manage_testpaper_result_graph:
  path: /classroom/{id}/activity/{activityId}/testpaper/graph
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:resultGraph }

classroom_manage_homework:
    path:  /classroom/{id}/manage/homework/list
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:homework }

classroom_manage_homework_check:
  path: /classroom/{id}/manage/homework/{resultId}/check
  defaults: { _controller: AppBundle:Classroom/ClassroomManage:homeworkCheck }

classroom_manage_students_defined_show:
    path:  /classroom/{classroomId}/manage/students/{userId}/defined_show
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:studentDefinedShow }

classroom_manage_students_show:
    path:  /classroom/{classroomId}/manage/students/{userId}/show
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:studentShow }

classroom_manage_member_deadline:
    path: /classroom/{classroomId}/manage/member/{userId}/deadline
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:setClassroomMemberDeadline }

classroom_member_deadline_reach:
    path: /classroom/{classroomId}/member/deadline/reach
    defaults: { _controller: AppBundle:Classroom/Classroom:deadlineReach }

classroom_expiry_date_rule:
    path: /classroom_expiry_date_rule
    defaults: { _controller: AppBundle:Classroom/ClassroomManage:expiryDateRule }

classroom_explore:
    path:  /classroom/explore/{category}
    defaults: { _controller: AppBundle:Explore:classroom, category:'' }

classroom_show:
    path:  /classroom/{id}
    defaults: { _controller: AppBundle:Classroom/Classroom:show }

classroom_qrcode:
    path:  /classroom/{id}/qrcode
    defaults: { _controller: AppBundle:Classroom/Classroom:qrcode }

classroom_reviews:
    path:  /classroom/{id}/review
    defaults: { _controller: AppBundle:Classroom/Review:list }

classroom_review_create:
    path:  /classroom/{id}/review/create
    defaults: { _controller: AppBundle:Classroom/Review:create }

classroom_review_post:
    path:  /classroom/{id}/review/{reviewId}/post
    defaults: { _controller: AppBundle:Classroom/Review:post }

classroom_review_delete:
    path:  /classroom/review/{reviewId}/delete
    defaults: { _controller: AppBundle:Classroom/Review:delete }

classroom_introductions:
    path:  /classroom/{id}/introduction
    defaults: { _controller: AppBundle:Classroom/Classroom:introduction }



classroom_sign:
    path:  classroom/sign/{classroomId}
    defaults: { _controller: AppBundle:Classroom/Classroom:sign }

classroom_signed_records:
    path:  classroom/sign/{classroomId}/records
    defaults: { _controller: AppBundle:Classroom/Classroom:getSignedRecordsByPeriod }

classroom_become_auditor:
    path: /classroom/{id}/becomeAuditor
    defaults: { _controller: AppBundle:Classroom/Classroom:becomeAuditor }

classroom_exit:
    path: /classroom/{id}/exit
    defaults: { _controller: AppBundle:Classroom/Classroom:exit }

classroom_canview:
    path: /classroom/{classroomId}/canview
    defaults: { _controller: AppBundle:Classroom/Classroom:canview }

classroom_courses:
    path: /classroom/{classroomId}/courses
    defaults: { _controller: AppBundle:Classroom/Course:list }


classroom_headteacher_match:
    path: /classroom/{classroomId}/headteacher/match
    defaults: { _controller: AppBundle:Classroom/Utility:headteacherMatch }

classroom_assistants_match:
    path: /classroom/{classroomId}/assistants/match
    defaults: { _controller: AppBundle:Classroom/Utility:assistantsMatch }

classroom_courses_pick:
    path: /classroom/{classroomId}/course/pick
    defaults: { _controller: AppBundle:Classroom/Course:pick }

classroom_course_search:
    path: /classroom/{classroomId}/course/search
    defaults: { _controller: AppBundle:Classroom/Course:search }

my_teaching_classroom_threads:
    path: /my/teaching/classroom/threads/{type}
    defaults: { _controller: AppBundle:Classroom/Classroom:classroomThreads }

classroom_course_notes_list:
    path: /classroom/{classroomId}/courses/notes
    defaults: { _controller: AppBundle:Classroom/CourseNote:list }

classroom_teachers:
    path: /classroom/{classroomId}/teachers/list
    defaults: { _controller: AppBundle:Classroom/Teacher:list }

classroom_teacherIds_catch:
    path: /classroom/{classroomId}/teacherIds/catch
    defaults: { _controller: AppBundle:Classroom/Teacher:catchIds }

classroom_buy_hint:
    path: /classroom/courses/{courseId}/buy/hint
    defaults: { _controller: AppBundle:Classroom/CourseTask:buyHint }

classrom_course_tasks_list:
    path: /classroom/{classroomId}/course/{courseId}/tasks/list
    defaults: { _controller: AppBundle:Classroom/CourseTask:list }


#org
switch_org:
    path: /swithOrg/{id}
    defaults: { _controller: AppBundle:Org:switchOrg }

org_tree:
    path: /org-tree.json
    defaults: { _controller: AppBundle:Org:orgTreeJson }
    methods: [GET]

#todo:只为展示页面



my_course_show:
    path:  /my/course/{id}/{tab}
    defaults: { _controller: AppBundle:My/Course:show, tab: 'tasks' }
    h5: true

course_member_expired:
    path:  /course/{id}/member/expired
    defaults: { _controller: AppBundle:Course/Course:memberExpired }



# last route
course_show:
  path: /course/{id}/{tab}
  defaults: { _controller: AppBundle:Course/Course:show, tab: 'summary' }
  h5: true

course_task_paging_show:
  path: /course/{courseId}/tasks/paging
  defaults: { _controller: AppBundle:Course/Course:tasksByPaging }

course_set_archive:
  path: /archive/course # 学习引擎2.0版本前该页面有SEO
  defaults: { _controller: AppBundle:Course/CourseSet:archive }

course_set_archive_show:
  path: /archive/course/{courseSetId} # 学习引擎2.0版本前该页面有SEO
  defaults: { _controller: AppBundle:Course/CourseSet:archiveDetail }

course_set_archive_task:
  path: /archive/course/{courseSetId}/lesson/{taskId} # 学习引擎2.0版本前该页面有SEO
  defaults: { _controller: AppBundle:Course/CourseSet:archiveTask }

online_sample:
  path: /online/sample
  defaults: { _controller: AppBundle:Online:sample}

lesson_testpaper_result:
  path: /{activityId}/testpaper/result
  defaults: { _controller: AppBundle:Testpaper/Manage:activityResultList }

cloud_testpaper_watermark:
  path: /cloud/testpaper_watermark
  defaults: {_controller: AppBundle:Cloud:testpaperWatermark }

event_dispatch:
  path: /event/dispatch
  defaults: { _controller: AppBundle:Event:dispatch }
  methods: [POST]